{"ast":null,"code":"var _jsxFileName = \"D:\\\\Facultate\\\\SPS\\\\Formula1Simulation\\\\frontend\\\\src\\\\pages\\\\SimulationPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport InputForm from \"../components/InputForm\";\nimport \"./SimulationPage.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SimulationPage = () => {\n  _s();\n  // State-uri pentru rezultatele simulării și datele utilizatorului\n  const [results, setResults] = useState(null);\n  const [formData, setFormData] = useState(null);\n\n  // Funcție pentru a simula performanța\n  const handleSimulate = async formData => {\n    setFormData(formData); // Salvează datele utilizatorului\n    const response = await fetch(\"/api/simulation\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(formData)\n    });\n    const data = await response.json();\n    setResults(data);\n  };\n\n  // Funcție pentru generarea PDF-ului\n  const handleGeneratePDF = async () => {\n    if (!formData || !results) {\n      alert(\"Trebuie să completezi simularea înainte de a genera PDF-ul!\");\n      return;\n    }\n    const payload = {\n      ...results,\n      // Include rezultatele simulării\n      ...formData // Include datele selectate de utilizator\n    };\n    const response = await fetch(\"http://localhost:5000/api/generate-pdf\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(payload)\n    });\n\n    // Descarcă fișierul\n    const blob = await response.blob();\n    const url = window.URL.createObjectURL(blob);\n    const link = document.createElement(\"a\");\n    link.href = url;\n    link.setAttribute(\"download\", \"Formula1_Report.pdf\");\n    document.body.appendChild(link);\n    link.click();\n    link.remove();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"f1-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"description\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Bun venit la Simularea Performan\\u021Bei Formula 1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Aceast\\u0103 aplica\\u021Bie v\\u0103 permite s\\u0103 evalua\\u021Bi performan\\u021Ba unui monopost pe diferite circuite, \\xEEn func\\u021Bie de parametrii specifici ai modelului ales si de datele selectate. Introduce\\u021Bi datele \\xEEn formularul de mai jos \\u0219i descoperi\\u021Bi timpul pe tur \\u0219i viteza maxim\\u0103 simulat\\u0103!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InputForm, {\n      onSimulate: handleSimulate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), results && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"results-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Rezultate Simulare\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Timp pe Tur:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this), \" \", results.lapTime, \" secunde\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Vitez\\u0103 Maxim\\u0103:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this), \" \", results.maxSpeed, \" km/h\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button-primary\",\n        onClick: handleGeneratePDF,\n        children: \"Descarc\\u0103 Raportul PDF\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(SimulationPage, \"AMgmwwayQ8CUgbZrVqoOzavqZCc=\");\n_c = SimulationPage;\nexport default SimulationPage;\nvar _c;\n$RefreshReg$(_c, \"SimulationPage\");","map":{"version":3,"names":["React","useState","InputForm","jsxDEV","_jsxDEV","SimulationPage","_s","results","setResults","formData","setFormData","handleSimulate","response","fetch","method","headers","body","JSON","stringify","data","json","handleGeneratePDF","alert","payload","blob","url","window","URL","createObjectURL","link","document","createElement","href","setAttribute","appendChild","click","remove","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSimulate","lapTime","maxSpeed","onClick","_c","$RefreshReg$"],"sources":["D:/Facultate/SPS/Formula1Simulation/frontend/src/pages/SimulationPage.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport InputForm from \"../components/InputForm\";\r\nimport \"./SimulationPage.css\";\r\n\r\nconst SimulationPage = () => {\r\n  // State-uri pentru rezultatele simulării și datele utilizatorului\r\n  const [results, setResults] = useState(null);\r\n  const [formData, setFormData] = useState(null);\r\n\r\n  // Funcție pentru a simula performanța\r\n  const handleSimulate = async (formData) => {\r\n    setFormData(formData); // Salvează datele utilizatorului\r\n    const response = await fetch(\"/api/simulation\", {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify(formData),\r\n    });\r\n    const data = await response.json();\r\n    setResults(data);\r\n  };\r\n\r\n  // Funcție pentru generarea PDF-ului\r\n  const handleGeneratePDF = async () => {\r\n    if (!formData || !results) {\r\n      alert(\"Trebuie să completezi simularea înainte de a genera PDF-ul!\");\r\n      return;\r\n    }\r\n\r\n    const payload = {\r\n      ...results, // Include rezultatele simulării\r\n      ...formData, // Include datele selectate de utilizator\r\n    };\r\n\r\n    const response = await fetch(\"http://localhost:5000/api/generate-pdf\", {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify(payload),\r\n    });\r\n\r\n    // Descarcă fișierul\r\n    const blob = await response.blob();\r\n    const url = window.URL.createObjectURL(blob);\r\n    const link = document.createElement(\"a\");\r\n    link.href = url;\r\n    link.setAttribute(\"download\", \"Formula1_Report.pdf\");\r\n    document.body.appendChild(link);\r\n    link.click();\r\n    link.remove();\r\n  };\r\n\r\n  return (\r\n    <div className=\"f1-container\">\r\n      <section className=\"description\">\r\n        <h2>Bun venit la Simularea Performanței Formula 1</h2>\r\n        <p>\r\n          Această aplicație vă permite să evaluați performanța unui monopost\r\n          pe diferite circuite, în funcție de parametrii specifici ai modelului ales si de datele selectate.\r\n          Introduceți datele în formularul de mai jos și descoperiți timpul pe\r\n          tur și viteza maximă simulată!\r\n        </p>\r\n      </section>\r\n\r\n      <InputForm onSimulate={handleSimulate} />\r\n\r\n      {results && (\r\n        <div className=\"results-card\">\r\n          <h2>Rezultate Simulare</h2>\r\n          <p>\r\n            <strong>Timp pe Tur:</strong> {results.lapTime} secunde\r\n          </p>\r\n          <p>\r\n            <strong>Viteză Maximă:</strong> {results.maxSpeed} km/h\r\n          </p>\r\n          <button className=\"button-primary\" onClick={handleGeneratePDF}>\r\n            Descarcă Raportul PDF\r\n          </button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SimulationPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}